{"version":3,"sources":["scripts/main.js"],"names":["phonesUrl","options","method","list","document","createElement","getPhones","Promise","resolve","reject","fetch","then","response","json","result","setTimeout","Error","createListOfPhones","phones","insertAdjacentHTML","map","phone","name","item","join","body","append","getPhonesDetails","ids","fetchedList","id","all","catch","error"],"mappings":";AAAA,aAIA,IAAMA,EAAY,4DAEZC,EAAU,CACdC,OAAQ,OAGJC,EAAOC,SAASC,cAAc,MAE9BC,EAAY,WACT,OAAA,IAAIC,QAAQ,SAACC,EAASC,GAC3BC,MAASV,GAAAA,OAAAA,EAAyBC,gBAAAA,GAC/BU,KAAK,SAAAC,GACGA,OAAAA,EAASC,SAEjBF,KAAK,SAAAG,GACJN,EAAQM,KAGZC,WAAW,WACTN,EAAO,IAAIO,QACV,QAIDC,EAAqB,SAACC,GASnBA,OARPf,EAAKgB,mBAAmB,aACnBD,UAAAA,OAAAA,EAAOE,IAAI,SAAAC,GAASA,OAAAA,EAAMC,OAAMF,IAAI,SAAAG,GAC7BA,MAAAA,iBAAAA,OAAAA,EADiC,iBAExCC,KAAK,KAHV,SAMApB,SAASqB,KAAKC,OAAOvB,GAEde,GAGHS,EAAmB,SAACC,GAClBC,IAAAA,EAAcD,EAAIR,IAAI,SAAAU,GAAMpB,OAAAA,MAASV,GAAAA,OAAAA,EAAoB8B,YAAAA,OAAAA,EAAjC,YAEvBvB,OAAAA,QAAQwB,IAAIF,IAGrBvB,IACGK,KAAKM,GACLN,KAAK,SAAAO,GAAUA,OAAAA,EAAOE,IAAI,SAAAC,GAASA,OAAAA,EAAMS,OACzCnB,KAAKgB,GACLK,MAAM,SAAAC,GACC,MAAA,IAAIjB,MAAMiB","file":"main.e53952d5.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\n// write your code here\n\nconst phonesUrl = 'https://mate-academy.github.io/phone-catalogue-static/api';\n\nconst options = {\n  method: 'GET',\n};\n\nconst list = document.createElement('ul');\n\nconst getPhones = () => {\n  return new Promise((resolve, reject) => {\n    fetch(`${phonesUrl}/phones.json`, options)\n      .then(response => {\n        return response.json();\n      })\n      .then(result => {\n        resolve(result);\n      });\n\n    setTimeout(() => {\n      reject(new Error());\n    }, 5000);\n  });\n};\n\nconst createListOfPhones = (phones) => {\n  list.insertAdjacentHTML('afterbegin', `\n     ${phones.map(phone => phone.name).map(item => `\n        <li>${item}</li>\n    `).join(' ')}\n  `);\n\n  document.body.append(list);\n\n  return phones;\n};\n\nconst getPhonesDetails = (ids) => {\n  const fetchedList = ids.map(id => fetch(`${phonesUrl}/phones/${id}.json`));\n\n  return Promise.all(fetchedList);\n};\n\ngetPhones()\n  .then(createListOfPhones)\n  .then(phones => phones.map(phone => phone.id))\n  .then(getPhonesDetails)\n  .catch(error => {\n    throw new Error(error);\n  });\n"]}